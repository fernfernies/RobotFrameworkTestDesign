# This is a basic workflow to help you get started with Actions

name: Schedule Run Staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  schedule:
    - cron: '0 0 * * 1-5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    runs-on: ubuntu-latest
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get current date
        id: date
        run: echo "::set-output name=gen_now::$(date +'%Y%m%d_%H%M%S')"
          
      - name: Pip install from requirements.txt file
        run: |
          python -m pip install -r requirements.txt
          
      - uses: joonvena/robotframework-docker-action@v0.1
        env:
            BROWSER: chrome
            ROBOT_TESTS_DIR: ${{ github.workspace }}
        
      - name: Generate report
        uses: actions/upload-artifact@v2
        with:
          name: "TEST_RESULT_${{ steps.date.outputs.gen_now }}"
          path: |
            /home/runner/work/RobotFrameworkTestDesign/RobotFrameworkTestDesign/output.xml
            /home/runner/work/RobotFrameworkTestDesign/RobotFrameworkTestDesign/log.html
            /home/runner/work/RobotFrameworkTestDesign/RobotFrameworkTestDesign/report.html
   
  slack-workflow-status:
    if: always()
    name: notify to slack
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          channel: '#testing'
          name: 'qa-automation-bot'
          icon_emoji: ':octocat:'
          icon_url: 'https://avatars0.githubusercontent.com/u/1701160?s=96&v=4'




